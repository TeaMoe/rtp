require 'eventmachine'
require_relative 'rtp_connection'
require_relative 'rtcp_connection'


module RTP

  # A Session is used for sending and receiving both RTP and RTCP data.
  # Useful with things such as RTSP servers and clients.
  class Session

    attr_reader :ssrc
    attr_reader :ip
    attr_reader :rtp_port
    attr_reader :rtcp_port


    # @param [Fixnum] ssrc The synchronization source ID that idenitifies this
    #   session.  This should be generated by the Participant.
    # @param [String] ip
    # @param [Fixnum] rtp_port
    # @param [Fixnum] rtcp_port
    def initialize(ssrc, ip, rtp_port, rtcp_port, &rtp_callback)
      @ssrc = ssrc
      @ip = ip
      @rtp_port = rtp_port
      @rtcp_port = rtcp_port
      @rtp_callback = EM.Callback(rtp_callback) if rtp_callback
    end

    # Opens the RTP and RTCP ports.
    def start
      start_rtp
      start_rtcp
    end

    # @todo Does this need to be here?
    def rtsp_transport_header
      # output the Transport header info
    end

    private

    # Starts the connection for RTP.
    def start_rtp
      puts "Opening RTP socket on #{@ip}:#{@rtp_port}"
      EM.open_datagram_socket(@ip, @rtp_port, RTPConnection, @ssrc, @rtp_callback)
    end

    # Starts the connection for RTCP.
    def start_rtcp
      puts "Opening RTCP socket on #{@ip}:#{@rtcp_port}"
      EM.open_datagram_socket(@ip, @rtcp_port, RTCPConnection)
    end
  end
end
