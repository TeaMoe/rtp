require 'eventmachine'
require_relative 'rtp_connection'
require_relative 'rtcp_connection'


module RTP

  # A Session is used for sending and receiving both RTP and RTCP data.
  # Useful with things such as RTSP servers and clients.
  class Session

    attr_reader :ssrc
    attr_reader :ip
    attr_reader :rtp_port
    attr_reader :rtcp_port

    # @param [Fixnum] ssrc The synchronization source ID that idenitifies this
    #   session.  This should be generated by the Participant.
    # @param [String] ip
    # @param [Fixnum] rtp_port
    # @param [Fixnum] rtcp_port
    def initialize(ssrc, ip, rtp_port, rtcp_port)
      @ssrc = ssrc
      @ip = ip
      @rtp_port = rtp_port
      @rtcp_port = rtcp_port

      @rtp_receiver = nil
      @rtcp_receiver = nil
      @rtp_sender = nil
      @rtcp_sender = nil
    end

    # Opens the RTP and RTCP ports.
    def start
      starter = proc do
        start_rtp
        start_rtcp
      end

      if EM.reactor_running?
        starter.call
      else
        EM.run { starter.call }
      end
    end

    def rtp_receiver(&block)
      if block_given?
        @rtp_receiver = EM.Callback(block)
      else
        @rtp_receiver
      end
    end

    def rtcp_receiver(&block)
      if block_given?
        @rtcp_receiver = EM.Callback(block)
      else
        @rtcp_receiver
      end
    end

    def rtp_sender(&block)
      if block_given?
        @rtp_sender = EM.Callback(block)
      else
        @rtp_sender
      end
    end

    def rtcp_sender(&block)
      if block_given?
        @rtcp_sender = EM.Callback(block)
      else
        @rtcp_sender
      end
    end

    # @todo Does this need to be here?
    def rtsp_transport_header
      # output the Transport header info
    end

    private

    # Starts the connection for RTP.
    def start_rtp
      puts "Opening RTP socket on #{@ip}:#{@rtp_port}"
      EM.open_datagram_socket(@ip, @rtp_port, RTPConnection, @ssrc,
        @rtp_receiver, @rtp_sender)
    end

    # Starts the connection for RTCP.
    def start_rtcp
      puts "Opening RTCP socket on #{@ip}:#{@rtcp_port}"
      EM.open_datagram_socket(@ip, @rtcp_port, RTCPConnection,
        @rtcp_receiver, @rtcp_sender)
    end
  end
end
